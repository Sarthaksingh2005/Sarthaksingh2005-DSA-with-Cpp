/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) 
    {
        if(root==NULL)//checking if tree is empty or not
        return{};
        vector<int>ans;//to store the result
        inorder(root,ans);//function to pass root and ans
        return ans;
    }
    void inorder(TreeNode*root,vector<int>&ans)
    {
      if(root==NULL)// condition to return in case of no child
        return;
      inorder(root->left,ans);//1
      ans.push_back(root->val);//2
      inorder(root->right,ans);//3
    }
};
