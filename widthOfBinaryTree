/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int widthOfBinaryTree(TreeNode* root) 
    {
        queue<pair<TreeNode*,int>>q;
        q.push({root,0});
        int maxwidth=0;

        while(q.size()>0)
        {
            int s=q.size();
            int sidx=q.front().second;
            int eidx=q.back().second;
            maxwidth=max(maxwidth,eidx-sidx+1);

            for(int i=0;i<s;i++)
            {
                TreeNode*curr=q.front().first;
                long long idx = q.front().second;
                q.pop();

                if(curr->left!=NULL)
                {
                    q.push({curr->left,idx*2+1});
                }
                if(curr->right!=NULL)
                {
                    q.push({curr->right,idx*2+2});
                }
            }
        }
        return maxwidth;     
    }
};
